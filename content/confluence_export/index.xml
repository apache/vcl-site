<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Confluence_exports on Apache VCL</title>
    <link>https://vcl.apache.org/confluence_export.html</link>
    <description>Recent content in Confluence_exports on Apache VCL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="https://vcl.apache.org/confluence_export/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Adding New OS Module</title>
      <link>https://vcl.apache.org/confluence_export/adding-new-os-module.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/adding-new-os-module.html</guid>
      <description>This is a short guide on how to set up development environment for a OS Module.
Install VCL  Follow the install guide linked to from the download page.  Setting up a new OS Module   Start by creating a Module/OS/&amp;hellip;pm file.
 See the other OS Module for examples. Set the package path in the file
package VCL::Module::OS::&amp;hellip;;    Add an entry to the module table pointing to your new module with the package path mentioned above.</description>
    </item>
    
    <item>
      <title>Apache VCL</title>
      <link>https://vcl.apache.org/confluence_export/apache-vcl.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/apache-vcl.html</guid>
      <description>Apache VCL The Apache VCL project.
VCL, Virtual Computing Lab. The VCL can be many things, first and foremost it is a open-source system used to dynamically provision and broker remote access to a dedicated compute environment for an end-user. The provisioned computers are typically housed in a data center and may be physical blade servers, traditional rack mounted servers, or virtual machines. VCL can also broker access to standalone machines such as a lab computers on a university campus.</description>
    </item>
    
    <item>
      <title>Automated installation of VCL and Xcat</title>
      <link>https://vcl.apache.org/confluence_export/automated-installation-of-vcl-and-xcat.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/automated-installation-of-vcl-and-xcat.html</guid>
      <description>This is a work in progress describing the development of an automatic installation for VCL and Xcat.
The precursor work is available on this site at https://cwiki.apache.org/confluence/display/VCL/Automated+Installation+of+VCL
An overview is available here: https://cwiki.apache.org/confluence/download/attachments/30739464/vcl_autoconfig_overview.pdf</description>
    </item>
    
    <item>
      <title>Base Image Creation</title>
      <link>https://vcl.apache.org/confluence_export/base-image-creation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/base-image-creation.html</guid>
      <description>{excerpt}These pages describe how to create base images.{excerpt}
Windows OS Linux OS Adding Standalone machines Lab provisioning module Adding xCAT kickstart based image</description>
    </item>
    
    <item>
      <title>Becoming a Committer</title>
      <link>https://vcl.apache.org/confluence_export/becoming-a-committer.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/becoming-a-committer.html</guid>
      <description>{excerpt}This page explains the process someone must go through to become an official committer to Apache VCL.{excerpt}
There are 4 steps you need to go through to become an official committer.
 Actively answer questions on the vcl-dev/vcl-user lists By answering questions on the community lists, you show an interest in the community. Your answers provide a metric of how well you understand VCL and how the Apache VCL community works.</description>
    </item>
    
    <item>
      <title>Board Reports</title>
      <link>https://vcl.apache.org/confluence_export/board-reports.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/board-reports.html</guid>
      <description>Board Reporting Schedule The Apache VCL project must submit quarterly board reports in February, May, August, and November. Reports are due the 2nd Wednesday of the month:
 November 9, 2011 February 8, 2012 May 9, 2012 August 8, 2012  The incubator project board reporting schedule is at: http://wiki.apache.org/incubator/ReportingSchedule

Reporting Guidelines  A community member should volunteer to make an initial draft of the board report a minimum of 1 week prior to the due date.</description>
    </item>
    
    <item>
      <title>Capture A Base Image</title>
      <link>https://vcl.apache.org/confluence_export/capture-a-base-image.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/capture-a-base-image.html</guid>
      <description>Run vcld -setup  Run the following command on the management node: {tip}/usr/local/vcl/bin/vcld -setup{tip} Navigate the menu options (Note: the names and numbers of the menu items may not match your installation):  {color:#808080}Select a module to configure:{color} *VCL Image State   Module*
  {color:#808080}Choose an operation:{color} Capture Base Image   {color:#808080}Enter the VCL login name or ID of the user who will own   the image:{color} Enter your VCL user ID or the user ID of the user you want to own the image.</description>
    </item>
    
    <item>
      <title>Configuration Management</title>
      <link>https://vcl.apache.org/confluence_export/configuration-management.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/configuration-management.html</guid>
      <description>This page describes a new configuration system that will be added to VCL that can be used to dynamically configure deployed systems.

Database Schema !config_schema.jpg|thumbnail,border=1! config:
 id - id of record name - name of record ownerid - owner of this record (reference to user.id) configtypeid - type of record (reference to configtype.id) data - any data associated with this (ex. puppet manifest) optional - 0/1 - when this config is mapped to something, can the user specify to apply it or not  configtype:</description>
    </item>
    
    <item>
      <title>Configuring a Standalone VCL Environment using VMware Server 1.x</title>
      <link>https://vcl.apache.org/confluence_export/configuring-a-standalone-vcl-environment-using-vmware-server-1.x.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/configuring-a-standalone-vcl-environment-using-vmware-server-1.x.html</guid>
      <description>{color:#ff0000}DISCLAIMER!{color} This document provides instuctions for configuring a standalone VCL environment running on a single computer which is able to provision VCL reservations using VMware. It is only provided to help you understand how the various components of VCL operate. This document DOES NOT describe how to configure a production VCL environment. The environment described in this document can however be used to learn, test, and help develop VCL.</description>
    </item>
    
    <item>
      <title>Configuring a Standalone VCL Environment using VMware Server 2.0</title>
      <link>https://vcl.apache.org/confluence_export/configuring-a-standalone-vcl-environment-using-vmware-server-2.0.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/configuring-a-standalone-vcl-environment-using-vmware-server-2.0.html</guid>
      <description>{color:#ff0000}DISCLAIMER!{color} This document provides instuctions for configuring a standalone VCL environment running on a single computer which is able to provision VCL reservations using VMware. It is only provided to help you understand how the various components of VCL operate. This document DOES NOT describe how to configure a production VCL environment. The environment described in this document can however be used to learn, test, and help develop VCL.</description>
    </item>
    
    <item>
      <title>Copy Administator Profile With Bat Scripts</title>
      <link>https://vcl.apache.org/confluence_export/copy-administator-profile-with-bat-scripts.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/copy-administator-profile-with-bat-scripts.html</guid>
      <description>Copy Administrator Windows XP Profile to Default User Profile Via Bat Scripts. Once you have your Administrator profile and shortcuts and programs in Windows XP perfect. All users will want to see the same environments. Doing a profile copy to the Default user lets all new users get the same profile as the Administrator that was just setup.
 Now as Administrator we need to create a new COPY profile. Please download these 3 VCL scripts that will do everything for you.</description>
    </item>
    
    <item>
      <title>Create a Linux Base Image</title>
      <link>https://vcl.apache.org/confluence_export/create-a-linux-base-image.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/create-a-linux-base-image.html</guid>
      <description>{excerpt}This page describes how to create a Linux base image.{excerpt}

Requirements  Computer being captured has been added to the VCL database Computer has been installed with Linux Two network adapters are enabled on the computer: ** eth0 - connected to the private network ** eth1 - connected to the public network The ability to log in as root via SSH using an identity key on the private network from management node</description>
    </item>
    
    <item>
      <title>Create a Windows Base Image</title>
      <link>https://vcl.apache.org/confluence_export/create-a-windows-base-image.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/create-a-windows-base-image.html</guid>
      <description>{excerpt}This page describes how to create a Windows base image.{excerpt}These instructions should work regardless of the provisioning engine being used (xCAT, VMware, etc.). Ignore the {color:#0000ff}{}VMware Only{}{color} sections if you are attempting to create an image using xCAT or some other bare metal provisioning engine. 
Requirements You will need the following:
 Windows installation ISO file Windows product key or KMS server address   The following must be done before an image can be captured:</description>
    </item>
    
    <item>
      <title>Creating a Virtual Machine for the VCL Server</title>
      <link>https://vcl.apache.org/confluence_export/creating-a-virtual-machine-for-the-vcl-server.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/creating-a-virtual-machine-for-the-vcl-server.html</guid>
      <description>{color:#000000}Create a reservation for the vSphere client image{color}## {color:#000000}Log into{color} https://vcl.ncsu.edu  {color:#000000}Click{color} {color:#000000}New Reservation{color}   {color:#000000}Select{color} {color:#000000}VMware vSphere Client   Bootcamp 2011{color}
  {color:#000000}Click Create Reservation{color}{color:#000000}Wait for   the reservation to be ready, Connect button appears{color}
  {color:#000000}Click{color} {color:#000000}Connect{color}   {color:#000000}Connect to the reservation via RDP and login{color}  {color:#000000}Log into the ESXi host{color}## {color:#000000}Launch the{color} {color:#000000}VMware vSphere Client{color} {color:#000000}application{color}### {color:#000000}IP Address:{color} {color:#000000}enter the IP address you were given{color}  {color:#000000}Username:{color} {color:#000000}root{color}   {color:#000000}Password:{color}   {color:#000000}{}{}{color}</description>
    </item>
    
    <item>
      <title>Database Configuration</title>
      <link>https://vcl.apache.org/confluence_export/database-configuration.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/database-configuration.html</guid>
      <description>{excerpt}This page describes how to create the VCL MySQL database and import the VCL database schema.{excerpt}

Prerequisites   You should have mysql server 5.x installed. If mysql server is not installed:
yum install mysql-server -y /sbin/chkconfig &amp;ndash;level 345 mysqld on /sbin/service mysqld start
  Your host based firewall (IPTables) should be configured to allow traffic from the web server and management server to connect to TCP port 3306 (mysqld).</description>
    </item>
    
    <item>
      <title>Dependencies</title>
      <link>https://vcl.apache.org/confluence_export/dependencies.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/dependencies.html</guid>
      <description>Frontend  Apache HTTP Server v1.3 or v2.x with SSL enabled - while VCL may run under another webserver capable of running PHP code, it has only been tested to work with Apache HTTP Server PHP 4 or 5, including these modules: ** php-mcrypt ** php-mysql ** php-xmlrpc ** php-gd ** php-xml Dojo Toolkit JPGraph FCKEditor (optional) useful to have the server set up to be able to send debugging emails</description>
    </item>
    
    <item>
      <title>Developer Guidelines</title>
      <link>https://vcl.apache.org/confluence_export/developer-guidelines.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/developer-guidelines.html</guid>
      <description>This page will eventually contain a summary of developer guidelines for the Apache VCL project. These guidelines will first be proposed and discussed by the development community using the project&amp;rsquo;s dev list.</description>
    </item>
    
    <item>
      <title>Example - Granting Two Sets of Users Access to Two Different Sets of Images</title>
      <link>https://vcl.apache.org/confluence_export/example-granting-two-sets-of-users-access-to-two-different-sets-of-images.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/example-granting-two-sets-of-users-access-to-two-different-sets-of-images.html</guid>
      <description>This page explains how to grant one groups of users access to one set of images, and another set of users access to a separate set of images.
After looking over these steps, you can watch a video of the steps being performed.

1. Create a User Group for Each Set of Users First, you need to create two user groups - one for each set of users.
 Click Manage Groups Under the User Groups section (at the top):  Enter a name for the group (it can include spaces)   (Optionally, if it shows up) select an affiliation for the group   Enter an owner of the group - probably yourself   Select a group allowed to edit the user group   The rest of the fields can be left as defaults  Click Add Repeat the steps for the second group  For the rest of the page, I&amp;rsquo;ll call the groups faculty and student</description>
    </item>
    
    <item>
      <title>For VCL Users</title>
      <link>https://vcl.apache.org/confluence_export/for-vcl-users.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/for-vcl-users.html</guid>
      <description>There are several concepts you need to understand when administering VCL.
{toc:outline=true|style=none}

Resources VCL manages sets of resources. There are four types of resources: images, computers, management nodes, and schedules. Each of these resources types are described below.

Images/Environments An image is a collection of software that is installed on an operating system. For the most part, these images can be deployed, used, modified, and saved (captured). However, there are some cases where only some of the operations could be proformed on an image.</description>
    </item>
    
    <item>
      <title>Frontend</title>
      <link>https://vcl.apache.org/confluence_export/frontend.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/frontend.html</guid>
      <description>Overview of code structure</description>
    </item>
    
    <item>
      <title>Graduation Board Resolution</title>
      <link>https://vcl.apache.org/confluence_export/graduation-board-resolution.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/graduation-board-resolution.html</guid>
      <description>X. Establish the Apache VCL Project
WHEREAS, the Board of Directors deems it to be in the best interests of the Foundation and consistent with the Foundation&amp;rsquo;s purpose to establish a Project Management Committee charged with the creation and maintenance of open-source software related to a modular cloud computing platform which dynamically provisions and brokers remote access to compute resources for distribution at no charge to the public.
NOW, THEREFORE, BE IT RESOLVED, that a Project Management Committee (PMC), to be known as &amp;ldquo;The Apache VCL Project&amp;rdquo;, be and hereby is established pursuant to Bylaws of the Foundation; and be it further</description>
    </item>
    
    <item>
      <title>Graduation Migration ToDo</title>
      <link>https://vcl.apache.org/confluence_export/graduation-migration-todo.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/graduation-migration-todo.html</guid>
      <description>This page is to track all the things that need to happen for migrating out of the incubator. Put your name next to any you are working on. Strike them out when completed.

Tasks for PMC Chair (Andy Kurth)   -Subscribe to the board mailing list- {color:#008000}(subscribed){color}
  -Subscribe to the infrastructure mailing list- {color:#008000}(was already subscribed){color}
  -Ensure that they have been added to the- -PMC chairs group (pmc-chairs) in LDAP &amp;ndash;.</description>
    </item>
    
    <item>
      <title>Granting Access to a New Image</title>
      <link>https://vcl.apache.org/confluence_export/granting-access-to-a-new-image.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/granting-access-to-a-new-image.html</guid>
      <description>Overview Once you have created a new image, there are a few things you have to do to allow other people to use it. If you don&amp;rsquo;t have access to do any of the following steps, you will need to get a VCL administrator to do them for you.
When you create a new image, it is only available to you, and it is only allowed to be run on a few computers that have been set aside for the testing of new images.</description>
    </item>
    
    <item>
      <title>Guidelines for Large Contributions</title>
      <link>https://vcl.apache.org/confluence_export/guidelines-for-large-contributions.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/guidelines-for-large-contributions.html</guid>
      <description>These are some guidelines for making a large contribution to Apache VCL for people who are not currently committers.
 State on the vcl-dev list what modification you&amp;rsquo;d like to make. Some background on why the existing codebase doesn&amp;rsquo;t work in your situation would be useful. Remember, when you modify existing code, it affects work being done by other contributors, which can result in imposing additional work on them. Propose a plan on the vcl-dev list for making the modification.</description>
    </item>
    
    <item>
      <title>How do I grant a user access to an image?</title>
      <link>https://vcl.apache.org/confluence_export/how-do-i-grant-a-user-access-to-an-image.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/how-do-i-grant-a-user-access-to-an-image.html</guid>
      <description>How Do I grant a user access to an Image? The 1st step would to make sure that you have an image that you want to access. I would 1st go into the Mage Group and add a Resource Group Called Math. This would be a Image Type and the Name would be Math, the owning User group will be my AdminTeam@mycampus. A group has now been created called Math. Then in your Manage Images Under Edit Image grouping.</description>
    </item>
    
    <item>
      <title>How to Increase the Size of a Virtual Machine Hard Drive under VMware ESXi</title>
      <link>https://vcl.apache.org/confluence_export/how-to-increase-the-size-of-a-virtual-machine-hard-drive-under-vmware-esxi.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/how-to-increase-the-size-of-a-virtual-machine-hard-drive-under-vmware-esxi.html</guid>
      <description>{excerpt}This page describes how to increase the size of a VM&amp;rsquo;s hard drive. This is useful if additional space is needed to install large applications.{excerpt}

Create a Full Copy of the Virtual Disk  Determine the VMware host the VM is on Shutdown the VM Log in to the VM host via SSH Navigate to the VM&amp;rsquo;s working directory (under the VM Working Directory Path configured in the VM profile)  {tip:icon=false}cd /vmfs/volumes/vmpath/vclv99-77_1846-v14{tip}</description>
    </item>
    
    <item>
      <title>Image Creation Problems</title>
      <link>https://vcl.apache.org/confluence_export/image-creation-problems.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/image-creation-problems.html</guid>
      <description>{excerpt}This page and its child pages discribe known problems that can occur which may cause image creation to fail.{excerpt}</description>
    </item>
    
    <item>
      <title>Image Load Flow</title>
      <link>https://vcl.apache.org/confluence_export/image-load-flow.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/image-load-flow.html</guid>
      <description>vcld daemon is running ** polls database every 12 seconds to check if the management node has any reservations which need to be processed vcld finds a reservation that needs to be processed vcld gathers all of the information for the reservation from the database by calling utils.pm::get_request_info() and then a DataStructure object is created vcld creates a new state object ** a new state object is created based on the request.</description>
    </item>
    
    <item>
      <title>Index</title>
      <link>https://vcl.apache.org/confluence_export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/</guid>
      <description>{include:Apache VCL} </description>
    </item>
    
    <item>
      <title>Install Windows for a Base Image</title>
      <link>https://vcl.apache.org/confluence_export/install-windows-for-a-base-image.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/install-windows-for-a-base-image.html</guid>
      <description>{excerpt}This page describes how to mount the Windows installation media and install Windows for a base image.{excerpt}

Mount the Installation Media The Windows installation media needs to be mounted as a drive on the computer. The method to do this varies widely based on the provisioning engine being used and resources available. The following lists some ways to mount the installation media:
h4. VMware - Configure the VM to mount the ISO image as a CD-ROM drive</description>
    </item>
    
    <item>
      <title>Issue Tracking</title>
      <link>https://vcl.apache.org/confluence_export/issue-tracking.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/issue-tracking.html</guid>
      <description>This page will be used to document the Apache VCL community&amp;rsquo;s procedures for reporting and tracking development issues, including:
 bugs new features roadmaps  </description>
    </item>
    
    <item>
      <title>KVM Configuration</title>
      <link>https://vcl.apache.org/confluence_export/kvm-configuration.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/kvm-configuration.html</guid>
      <description>Install Packages The following commands will install the Linux packages required for VCL to manage a KVM host:
{panel}yum install libvirt virt-manager dejavu-lgc-sans-fonts bridge-utils libguestfs-tools -y /sbin/chkconfig libvirtd on
echo &amp;ldquo;Starting the libvirtd service&amp;hellip;&amp;rdquo; /sbin/chkconfig libvirtd on /sbin/service libvirtd start{panel} The virt-manager package is optional. It is a graphical utility which is used to manage KVM and other hypervisors controlled via libvirt. The dejavu-lgc-sans-fonts package is usually necessary in order for virt-manager to render fonts correctly.</description>
    </item>
    
    <item>
      <title>Libvirt Provisioning Module</title>
      <link>https://vcl.apache.org/confluence_export/libvirt-provisioning-module.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/libvirt-provisioning-module.html</guid>
      <description>(this page is probably beyond repair and should be recreated - it would probably be best to separate the manually created part from the auto generated part and just directly check in the manually created part as a plain html file instead of a .mdtext file)
Libvirt  is an open source toolkit which can interact with KVM, Xen, and several other virtualization architectures.
libvirt.pm  libvirt.pm is the main provisioning module Computers should have their provisioningID attributes set to point to this module in order to utilize it Implements the required provisioning module subroutines: load, capture, node_status, power_status, power_on, power_off, power_reset&amp;hellip; Implements the functions provided by libvirt: define, start, destroy&amp;hellip; Does not contain code specific to any of the hypervisors supported by libvirt (KVM, Xen, etc) File location: lib/VCL/Module/Provisioning/Libvirt.</description>
    </item>
    
    <item>
      <title>Making a Reservation</title>
      <link>https://vcl.apache.org/confluence_export/making-a-reservation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/making-a-reservation.html</guid>
      <description>!newreservation.png!
To make a VCL reservation:
 Select New Reservation from the left navigation menu Select the environment you would like to use from the drop-down box If you would like to use the environment immediately, select Now. Otherwise, select Later and select a time in the future to schedule use of the environment. Select the duration you would like to use the environment, or, if you have access to and need the reservation for a really long time, enter an end date/time in the Until box.</description>
    </item>
    
    <item>
      <title>managegroups.py - Remotely managing user groups</title>
      <link>https://vcl.apache.org/confluence_export/managegroups.py-remotely-managing-user-groups.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/managegroups.py-remotely-managing-user-groups.html</guid>
      <description>managegroups.py is a script for remotely managing VCL user groups. It uses VCL&amp;rsquo;s XML RPC API to provide an easy command line driven way of doing group management.
{color:#ff0000}{}NOTE: This script does not work with python 2.7. It relies on the xmlrpclib module which changed from 2.6 to 2.7 in a way that broke the script. You need to use python 2.6 for it to work.{color}

Download information managegroups.py is not included in any official releases.</description>
    </item>
    
    <item>
      <title>Management Node Installation</title>
      <link>https://vcl.apache.org/confluence_export/management-node-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/management-node-installation.html</guid>
      <description>{excerpt}This page describes how to install and configure the backend VCL management node components including the required Perl modules, VCL daemon (vcld), and Windows utility dependencies.{excerpt}

Assumptions The following instructions assume the VCL database has been installed and configured and that the managment node information has been added to the database as described on the [web code installation page|Web Code Installation] . This also assumes that the perl-DBD-MySQL-3.x and the mysql client (mysql-5.</description>
    </item>
    
    <item>
      <title>Missing from export</title>
      <link>https://vcl.apache.org/confluence_export/missing_from_export.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/missing_from_export.html</guid>
      <description>The following pages were not properly exported and need to be manually copied from Confluence:
administrator&#39;s-faq.mdtext
current-&amp;amp;-future-development-topics.mdtext
how-to&#39;s.mdtext
install-&amp;amp;-configure-cygwin-sshd.mdtext
meeting-&amp;amp;-conference-call-notes.mdtext
phpmyadmin-installation-&amp;amp;-configuration.mdtext
place-holder-for-vcl-2.4-(unreleased).mdtext
resource-grouping-&amp;amp;-mapping.mdtext
upgrade-from-previous-version-(2.1-to-2.2.1).mdtext
upgrade-from-previous-version-(2.1-to-2.3).mdtext
upgrade-from-previous-version-(2.2.1-to-2.3).mdtext
upgrade-from-previous-version-(2.2-to-2.2.1).mdtext
upgrade-from-previous-version-(2.2-to-2.3).mdtext
vcl-2.2.1-phpmyadmin-installation-&amp;amp;-configuration.mdtext
vcl-2.3-phpmyadmin-installation-&amp;amp;-configuration.mdtext
vmware-configuration-(2.2.1-and-below).mdtext
database.mdtext
apache-vcl-community.mdtext
code-documentation.mdtext
design-considerations.mdtext
development-environment-tips.mdtext
development.mdtext</description>
    </item>
    
    <item>
      <title>Modularized Architecture</title>
      <link>https://vcl.apache.org/confluence_export/modularized-architecture.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/modularized-architecture.html</guid>
      <description>Background The VCL backend code was significantly reworked in version 2.0 to utilize a &amp;ldquo;modularized&amp;rdquo; framework. This framework allows certain parts of the code to be separated from the core code through the implementation of modules.
VCL interacts with external technologies including:
 provisioning engines operating systems monitoring utilities  The technology being used may vary based on the VCL deployment, management node, image, computer, and so on. Modules make configuring VCL to use a certain technology easy while simplifying the core code.</description>
    </item>
    
    <item>
      <title>Network Layout</title>
      <link>https://vcl.apache.org/confluence_export/network-layout.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/network-layout.html</guid>
      <description>{excerpt}This page describes the basic network layout required in order for VCL to function. It also describes the recommended network layout if a blade chassis management module is used.{excerpt}

At the simplest form VCL uses two networks  Private - applies to provisioning modules where node is reloaded, esx, vmware, etc.   loading and boot strapping images     managing reservations, adding/deleting accounts, controlling the OS on the node     opens access ports on node for user requests on public network interface     image creation     DHCP serves fixed-addresses over this network to the eth0 adapter of the node     DHCP is run on the management node - prerequisite   Public   user accessible     VCL can either use dhcp(preferred) or statically assign addresses to the node on the public network    The diagram below shows the simple layout: {gliffy:name=Simple network layout|space=VCL|page=Network Layout|align=left|size=M}</description>
    </item>
    
    <item>
      <title>Network requirements</title>
      <link>https://vcl.apache.org/confluence_export/network-requirements.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/network-requirements.html</guid>
      <description>For the current Apache VCL release (version 2.2.1), the system requires a minimum of two parallel networks, i.e.: (1) A private network, providing interconnectivity between the VCL management node and the deployed target server(s) (the latter with the requested software being provided to the end user, running either real or virtual images). This private network allows the management node to manage the pool of server resources, and to load and tear down the images (OS plus applications/middleware) on the target server(s) that will be handed to an end user.</description>
    </item>
    
    <item>
      <title>Operating System Module Inheritance</title>
      <link>https://vcl.apache.org/confluence_export/operating-system-module-inheritance.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/operating-system-module-inheritance.html</guid>
      <description>{gliffy:name=OS Modularization Transition|space=VCL|page=Operating System Module Inheritance|align=center|size=L} {gliffy:name=OS Module Inheritance|space=VCL|page=Operating System Module Inheritance|align=center|size=L}
  Each row in the image table is configured with an OSid (image.OSid), this points to the id column in the OS table (OS.id)
  Each row in the OS table is configured with a moduleid (OS.moduleid), this points to the id column in the module table (module.id)
  The module table contains a column named perlpackage (module.</description>
    </item>
    
    <item>
      <title>Operating System Module Interface Specification</title>
      <link>https://vcl.apache.org/confluence_export/operating-system-module-interface-specification.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/operating-system-module-interface-specification.html</guid>
      <description>Background  OS module objects are created by State.pm::initialize() when a new state object is created. OS module objects are available within state and provisioning modules OS module objects are not available within other types of modules for safety. For example, a monitoring or other utility module should not be able to call the OS module&amp;rsquo;s shutdown subroutine.  
OS Module Subroutines It is highly recommended that all OS modules implement the following subroutines.</description>
    </item>
    
    <item>
      <title>Patch to remove mcrypt dependency</title>
      <link>https://vcl.apache.org/confluence_export/patch-to-remove-mcrypt-dependency.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/patch-to-remove-mcrypt-dependency.html</guid>
      <description>This page explains how to use a php package called phpseclib to remove the requirement of mcrypt. phpseclib will use mcrypt functions if it is installed but will use native php to implement the encryption if it is not installed.
Here are the steps to remove the dependency:
 Download phpseclib to /tmp (version 0.2.2 was used for testing) {tip} cd /tmp wget {nolink:http://downloads.sourceforge.net/project/phpseclib/phpseclib0.2.2.zip} {tip} Create a directory named phpseclib in your .</description>
    </item>
    
    <item>
      <title>Pre-release test procedures</title>
      <link>https://vcl.apache.org/confluence_export/pre-release-test-procedures.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/pre-release-test-procedures.html</guid>
      <description>Recommended test cases for release candidates.

Web frontend  Block Allocations ** For each of these, test for weekly, monthly, and list ** Create new block allocations; try adding multiple times per test ** Edit block allocations ** Delete block allocations ** Request new block allocations; try both specifying a user group and selecting &amp;ldquo;(group not listed)&amp;quot;; try with and without comments; try with users with and without an email address in the user table ** Accept requested block allocations; try accepting from users with and without an email address in the user table ** Reject requested block allocations; try rejecting from users with and without an email address in the user table ** Create an entry where you are in the user group that is active during the current time to check viewing the block status</description>
    </item>
    
    <item>
      <title>Provisioning Engine Module Interface Specification</title>
      <link>https://vcl.apache.org/confluence_export/provisioning-engine-module-interface-specification.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/provisioning-engine-module-interface-specification.html</guid>
      <description>Background  Provisioning module objects are created by State.pm::initialize() when a new state object is created. Provisioning module objects are available within state modules and OS modules Provisioning module objects are not available within other types of modules for safety.  {color:#6600ff}{}Explain:{color}
 {color:#6600ff}{}define what we mean by &amp;ldquo;provisioning system&amp;rdquo;{color} {color:#6600ff}{}give examples of provisioning systems{}{color} {color:#6600ff}{}could be bare metal, virtual, differentiated, undifferentiated, a service, a special piece of hardware, eventually VCL could provision various types of resources{}{color} {color:#6600ff}{}relationships among mgt nodes, computers, provisioning systems (such as computer is assigned 1 prov system at a time){color} {color:#6600ff}{}computer.</description>
    </item>
    
    <item>
      <title>Security Features</title>
      <link>https://vcl.apache.org/confluence_export/security-features.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/security-features.html</guid>
      <description>Baseline VCL security for the end-user environments:
 The VCL environments are not generally shared. One user to one machine. After an environment is used - the machine is reloaded(sanitized) with the same or another golden environment. All residual data is destroyed or overwritten during the reload process. Images can be setup to allow the user to have either administrative access or unprivileged access by using the image profile meta-data. This is on a per image basis.</description>
    </item>
    
    <item>
      <title>States</title>
      <link>https://vcl.apache.org/confluence_export/states.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/states.html</guid>
      <description>Request States   Request State  Processed by Module  Description   new  new.pm  * Normal reservation initiated by user  * Computer is reloaded if image specified for reservation is not preloaded * User account is added to computer |  reload  new.pm  * Reservation only reloads computer  * Computer is reloaded if image specified for reservation is not preloaded |  tomaintenance  new.</description>
    </item>
    
    <item>
      <title>Storage Management</title>
      <link>https://vcl.apache.org/confluence_export/storage-management.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/storage-management.html</guid>
      <description>Something VCL has been lacking is automated management of storage, both on the system side and on the user side. This is a list of areas that should be addressed when designing storage management and automation:
 System storage: ** block attached image store for management nodes ** network attached image store for management nodes ** block attached image store for hypervisors ** network attached image store for hypervisors ** block attached images for node booting (i.</description>
    </item>
    
    <item>
      <title>Sysprep Fails Because of Unsigned Storage Drivers</title>
      <link>https://vcl.apache.org/confluence_export/sysprep-fails-because-of-unsigned-storage-drivers.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/sysprep-fails-because-of-unsigned-storage-drivers.html</guid>
      <description>Sysprep may fail if mass storage drivers are not signed. This problem occurs even if the sysprep.inf file is configured with DriverSigningPolicy=Ignore. This is a known problem with some versions of LSI SAS drivers (1.30.02.00) used on IBM blades. The driver available from LSI&amp;rsquo;s website is not correctly signed. The same version is available from IBM&amp;rsquo;s website and is correctly signed. It can be downloaded from: (Critical update) IBM and LSI Basic or Integrated RAID SAS driver v1.</description>
    </item>
    
    <item>
      <title>Terms</title>
      <link>https://vcl.apache.org/confluence_export/terms.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/terms.html</guid>
      <description> backend block request cluster reservation currentimage.txt forimaging flag frontend grouping image imagemeta laststate management node mapping module provisioning engine request reservation resource state tmpl file vcld vcld.conf xCAT  </description>
    </item>
    
    <item>
      <title>Troubleshooting</title>
      <link>https://vcl.apache.org/confluence_export/troubleshooting.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/troubleshooting.html</guid>
      <description>{excerpt}These pages are intended to help VCL administrators troubleshoot problems.{excerpt}</description>
    </item>
    
    <item>
      <title>Using VCL to Broker Access to Pre-installed Machines</title>
      <link>https://vcl.apache.org/confluence_export/lab.pm-provisioning-module.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/lab.pm-provisioning-module.html</guid>
      <description>The Lab.pm provisioning module is used to broker access to standalone pre-installed Linux or Solaris machines. These machines could be in an existing walk-in computer lab or racked in a server room.
There are four main parts needed to setup a standalone machine to use with the Lab.pm module.
 a non-root account called vclstaff on the target machines ssh idenitity key for vclstaff account, this key is used by the vcld process on the management node ssh service running on port 24 of the target machines vclclientd running on the target machines, vclclientd in the bin directory of the vcld release  For distribution to a large set of machines, an rpm or package could be created to distribute vclclientd and related files.</description>
    </item>
    
    <item>
      <title>Variable Table</title>
      <link>https://vcl.apache.org/confluence_export/variable-table.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/variable-table.html</guid>
      <description>Overview This page describes the variable table in the database. The purpose of this table is to allow pieces of data to be easily stored in the database without having to manipulate the schema. The need for such a table has grown over time as more and more features are added to VCL. This table will become very useful as VCL becomes increasingly modularized. This table will allow any VCL component to access the variable data without having to interact directly with the database.</description>
    </item>
    
    <item>
      <title>VCL 2.1</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.1.html</guid>
      <description>Table of Contents  Download links Release Notes * I. Intro and Description * II. VCL Roadmap * III. Getting Involved in the ASF VCL Community * IV. How to Submit Bugs and Feature Requests Change Log * Sub-task * Bug * Improvement * New Feature * Task  
Download links Please make sure to download VCL from an mirror server. The following link will automatically select one for you that should be close to you.</description>
    </item>
    
    <item>
      <title>VCL 2.1 goals</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.1-goals.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.1-goals.html</guid>
      <description>VCL 2.1 goals
 xCAT 2.x module   written and in testing stage   Get rid of preferredimage from image table, use nextimage instead Clean up data base - removed unused variables Shibboleth support   testing stage   Web server load balance healthcheck.pl - improve / bring up to date, add support for vms, try to reinstall nodes if necessary. Clean up / re-write blockrequest module, planning to use api calls to web site.</description>
    </item>
    
    <item>
      <title>VCL 2.1 Installation</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.1-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.1-installation.html</guid>
      <description>{pagetree:root=@self|sort=position|excerpt=true|reverse=false|startDepth=99|expandCollapseAll=true|searchBox=false}</description>
    </item>
    
    <item>
      <title>VCL 2.2.1</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.2.1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.2.1.html</guid>
      <description>Table of Contents  Download links Release Notes * I. Intro and Description * II. VCL Roadmap * III. Getting Involved in the ASF VCL Community * IV. How to Submit Bugs and Feature Requests Change Log * Bug * Improvement * New Feature  
Download links Please make sure to download VCL from an mirror server. The following link will automatically select one for you that should be close to you.</description>
    </item>
    
    <item>
      <title>VCL 2.2.1 - Adding LDAP Authentication</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.2.1-adding-ldap-authentication.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.2.1-adding-ldap-authentication.html</guid>
      <description>Prerequisites for your LDAP server:  SSL should be enabled on your LDAP server An LDAP account that can look up a user&amp;rsquo;s first and last names, user id, and email address (email address is optional) - this will be referred to as &amp;lsquo;vcllookup&amp;rsquo; on this page. You can skip this step if anonymous binds are enabled on your LDAP server and an anonymous bind will be able to look up userids, names, and email addresses.</description>
    </item>
    
    <item>
      <title>VCL 2.2.1 - Further Steps if Using VMware</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.2.1-further-steps-if-using-vmware.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.2.1-further-steps-if-using-vmware.html</guid>
      <description>If you are using standalone VMware servers (i.e. ones that VCL did not deploy using xCAT), you first need to add the VMWare servers; then, you need to add the virtual machines. You can either add them individually (Adding Individual VMWare Servers/Virtual Machines), or if they have sequential hostnames and IP addresses, you can add them all at once (Adding Multiple VMWare Servers/Virtual Machines).
Once you have added at least one computer, you can get to the &amp;ldquo;Add Single Computer&amp;rdquo; page by going to Manage Computers-&amp;gt;Edit Computer Information and clicking Add.</description>
    </item>
    
    <item>
      <title>VCL 2.2.1 - Further steps if using xCAT</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.2.1-further-steps-if-using-xcat.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.2.1-further-steps-if-using-xcat.html</guid>
      <description>You can initially add individual computers or multiple computers all together. After you have added at least one computer, you will need to go to Manage Computers -&amp;gt; Edit Computer Information to additional ones.

Adding Individual Computers  click &amp;ldquo;Manage Computers&amp;rdquo; select the &amp;ldquo;Add Single Computer&amp;rdquo; radio button click Submit fill in Hostname, IP Address, owner (admin@Local), RAM, Proc Speed, Network Speed, select &amp;ldquo;blade&amp;rdquo; for Type, select &amp;ldquo;xCAT 2.x Provisioning&amp;rdquo; for &amp;ldquo;Provisioning Engine&amp;rdquo;, and click the checkbox under &amp;ldquo;allcomputers&amp;rdquo;, and &amp;ldquo;newimages&amp;rdquo; click Confirm Computer click Submit (don&amp;rsquo;t worry about the fact that the computer you just added isn&amp;rsquo;t listed after clicking Submit) after you&amp;rsquo;ve configured your image library and your management node has started checking in, you should be able to make a reservation</description>
    </item>
    
    <item>
      <title>VCL 2.2.1 Database Installation</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.2.1-database-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.2.1-database-installation.html</guid>
      <description>{excerpt:hidden=true}How to install MySQL Server, create the VCL database, and import the VCL database schema{excerpt}

Install &amp;amp; Configure the Database  h2. Download &amp;amp; Extract the Apache VCL Source  If you have not already done so, download and the Apache VCL source to   the database server: {tip}wget {nolink:http://www.apache.org/dist/incubator/vcl/apache-VCL-2.2.1-incubating.tar.bz2}{tip}
  Extract the files:   {tip}tar -jxvf apache-VCL-2.2.1-incubating.tar.bz2{tip}
 h2. Install MySQL Server  Install MySQL Server 5.</description>
    </item>
    
    <item>
      <title>VCL 2.2.1 Installation</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.2.1-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.2.1-installation.html</guid>
      <description>Install &amp;amp; Configure:  Database Web Components Management Node Components   {anchor:Database} {include:VCL 2.2.1 Database Installation} {anchor:Web} {include:VCL 2.2.1 Web Code Installation} {anchor:ManagementNode} {include:VCL 2.2.1 Management Node Installation}</description>
    </item>
    
    <item>
      <title>VCL 2.2.1 Management Node Installation</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.2.1-management-node-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.2.1-management-node-installation.html</guid>
      <description>{excerpt:hidden=true} How to install and configure the VCL management node components including the required Linux packages, Perl modules, VCL daemon (vcld), and Windows utility dependencies{excerpt}

Install &amp;amp; Configure the Management Node Components 
Prerequisites The following management node installation instructions assume the instructions on the following pages have previously been completed:
 VCL:VCL 2.2.1 Database Installation VCL:VCL 2.2.1 Web Code Installation  
Supported Operating Systems: The VCL management node daemon (vcld) has been developed to run on an operating system based on Red Hat Enterprise Linux (RHEL).</description>
    </item>
    
    <item>
      <title>VCL 2.2.1 Web Code Installation</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.2.1-web-code-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.2.1-web-code-installation.html</guid>
      <description>{excerpt:hidden=true} How to install and configure the frontend VCL web code. It also describes how to add local accounts to the VCL database, configure LDAP authentication, and set the timezone correctly.{excerpt}

Install &amp;amp; Configure the Web Components 
Prerequisites The following instructions assume these tasks have previously been completed:
 Apache VCL 2.2.1 has been downloaded VCL database has been installed and configured  
Web Server:  Apache HTTP Server v1.</description>
    </item>
    
    <item>
      <title>VCL 2.3</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.3.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.3.html</guid>
      <description>VCL 2.3 was release on July 20th, 2012

Table of Contents  Download links Release Notes * I. Intro and Description * II. VCL Roadmap * III. Getting Involved in the ASF VCL Community * IV. How to Submit Bugs and Feature Requests Change Log * Sub-task * Bug * Improvement * New Feature * Task  
Download links Please make sure to download VCL from a mirror server.</description>
    </item>
    
    <item>
      <title>VCL 2.3 - Adding LDAP Authentication</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.3-adding-ldap-authentication.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.3-adding-ldap-authentication.html</guid>
      <description>Adding LDAP Authenciation 
Prerequisites for your LDAP server:  SSL should be enabled on your LDAP server An LDAP account that can look up a user&amp;rsquo;s first and last names, user id, and email address (email address is optional) - this will be referred to as &amp;lsquo;vcllookup&amp;rsquo; on this page. You can skip this step if anonymous binds are enabled on your LDAP server and an anonymous bind will be able to look up userids, names, and email addresses.</description>
    </item>
    
    <item>
      <title>VCL 2.3 - Further Steps if Using VMware</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.3-further-steps-if-using-vmware.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.3-further-steps-if-using-vmware.html</guid>
      <description>If you are using standalone VMware servers (i.e. ones that VCL did not deploy using xCAT), you first need to configure a VM Profile to match your setup. Next, add the VMWare servers. Then, you need to add the virtual machines. You can either add them individually (Adding Individual VMWare Servers/Virtual Machines), or if they have sequential hostnames and IP addresses, you can add them all at once (Adding Multiple VMWare Servers/Virtual Machines).</description>
    </item>
    
    <item>
      <title>VCL 2.3 - Further steps if using xCAT</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.3-further-steps-if-using-xcat.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.3-further-steps-if-using-xcat.html</guid>
      <description>Once you have added at least one computer, you can add more computers by going to Manage Computers-&amp;gt;Edit Computer Information and clicking Add Single Computer or Add Multiple Computers&amp;rdquo;.

Adding Individual Computers  Click Manage Computers Select the Add Single Computer radio button Click Submit Fill in the following:   Hostname     Type - blade     Public IP Address     Private IP Address (optional)     Public MAC Address (optional)     Private MAC Address (optional)     Provisioning Engine - xCAT 2.</description>
    </item>
    
    <item>
      <title>VCL 2.3 Configure Frontend Authentication</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.3-configure-frontend-authentication.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.3-configure-frontend-authentication.html</guid>
      <description>{excerpt:hidden=true} How to configure authentication for the frontend VCL web code using LDAP and Local accounts.{excerpt}

Configure Frontend Authentication 
Adding Local VCL Accounts Local VCL accounts are contained within the VCL database. The admin account is a local VCL account. Additional local accounts can be added via the backend management node code. After you have finished the backend management node installation, run: {tip} vcld -setup {tip}
 Select VCL Base Module Select Add Local VCL User Account Enter the requested information  {include:VCL 2.</description>
    </item>
    
    <item>
      <title>VCL 2.3 Database Installation</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.3-database-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.3-database-installation.html</guid>
      <description>{excerpt:hidden=true}How to install MySQL Server, create the VCL database, and import the VCL database schema{excerpt}

Install &amp;amp; Configure the Database  h2. Download &amp;amp; Extract the Apache VCL Source  If you have not already done so, download and the Apache VCL source to   the database server: {tip}wget &amp;ndash;trust-server-names &amp;lsquo;{nolink:http://vcl.apache.org/downloads/download.cgi?action=download&amp;amp;filename=%2Fvcl%2Fapache-VCL-2.3.tar.bz2}&#39;{tip}
  Extract the files:   {tip}tar -jxvf apache-VCL-2.3.tar.bz2{tip}
 h2. Install MySQL Server  Install MySQL Server 5.</description>
    </item>
    
    <item>
      <title>VCL 2.3 Installation</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.3-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.3-installation.html</guid>
      <description>Install &amp;amp; Configure:  Database Web Components Management Node Components Configure Authentication   {anchor:Database} {include:VCL 2.3 Database Installation} {anchor:Web} {include:VCL 2.3 Web Code Installation} {anchor:ManagementNode} {include:VCL 2.3 Management Node Installation} {anchor:Authentication} {include:VCL 2.3 Configure Frontend Authentication}</description>
    </item>
    
    <item>
      <title>VCL 2.3 Management Node Installation</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.3-management-node-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.3-management-node-installation.html</guid>
      <description>{excerpt:hidden=true} How to install and configure the VCL management node components including the required Linux packages, Perl modules, VCL daemon (vcld), and Windows utility dependencies{excerpt}

Install &amp;amp; Configure the Management Node Components 
Prerequisites The following management node installation instructions assume the instructions on the following pages have previously been completed:
 VCL:VCL 2.3 Database Installation VCL:VCL 2.3 Web Code Installation  
Supported Operating Systems: The VCL management node daemon (vcld) has been developed to run on an operating system based on Red Hat Enterprise Linux (RHEL).</description>
    </item>
    
    <item>
      <title>VCL 2.3 Web Code Installation</title>
      <link>https://vcl.apache.org/confluence_export/vcl-2.3-web-code-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-2.3-web-code-installation.html</guid>
      <description>{excerpt:hidden=true} How to install and configure the frontend VCL web code. It also describes how to add local accounts to the VCL database, configure LDAP authentication, and set the timezone correctly.{excerpt}

Install &amp;amp; Configure the Web Components 
Prerequisites The following instructions assume these tasks have previously been completed:
 Apache VCL 2.3 has been downloaded VCL database has been installed and configured  
Web Server:  Apache HTTP Server v1.</description>
    </item>
    
    <item>
      <title>VCL Architecture</title>
      <link>https://vcl.apache.org/confluence_export/vcl-architecture.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-architecture.html</guid>
      <description>{gliffy:name=VCL Architecture diagram|space=VCL|page=VCL Architecture|align=left|size=L} The VCL Architecture consists or 3 main components:
 Web Database Management node  </description>
    </item>
    
    <item>
      <title>VCL conf call 2-5-2009</title>
      <link>https://vcl.apache.org/confluence_export/vcl-conf-call-2-5-2009.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-conf-call-2-5-2009.html</guid>
      <description>VCL-dev 2/05/2009 call
Roll Call:
Josh Thompson Andy Kurth John Bass Andrew Brown Brian Bouterse Aaron Peeler
Agenda 1 - ESX module VCL-29 2 - OS module progress VCL-23 3 - Access methods NX protocol VCL-80
1 - ESX module VCL-29 Brian - ESX module readme file https://svn.apache.org/repos/asf/incubator/vcl/trunk/managementnode/lib/VCL/Module/Provisioning/esx.README Brian/Andrew - ESX host flow for esx.pm module using ARP as to not pre-define fixed addresses in dhcpd.conf. esx module registers vmx configured to autogenerate MAC address.</description>
    </item>
    
    <item>
      <title>VCL Installation</title>
      <link>https://vcl.apache.org/confluence_export/vcl-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-installation.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>VCL Release Procedures</title>
      <link>https://vcl.apache.org/confluence_export/vcl-release-procedures.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vcl-release-procedures.html</guid>
      <description>Prerequisites: Things that must be done before a release  all items from the JIRA roadmap for the release must be completed or moved to a future release ALL human readable files must contain the Apache license header ** this includes style sheets, test code, and documentation - when in doubt, add a header ** files that are part of other software packages that are bundled with a release must not contain the header (unless that software is also ASF software) and should be clearly documented as being bundled software LICENSE and NOTICE files should be reviewed ** LICENSE: This file should have the Apache License at the top of it; any third party artifacts or documents included in the release should have their licenses included in this file along with a clear explanation of which files each license applies to.</description>
    </item>
    
    <item>
      <title>Video - Granting Two Sets of Users Access to Two Different Sets of Images</title>
      <link>https://vcl.apache.org/confluence_export/video-granting-two-sets-of-users-access-to-two-different-sets-of-images.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/video-granting-two-sets-of-users-access-to-two-different-sets-of-images.html</guid>
      <description>This video shows the steps outlined in Example - Granting Two Sets of Users Access to Two Different Sets of Images
This video was created using Wink
!example_two_sets_of_groups.swf|width=895,height=581!</description>
    </item>
    
    <item>
      <title>VMware Configuration</title>
      <link>https://vcl.apache.org/confluence_export/vmware-configuration.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vmware-configuration.html</guid>
      <description>Terminology 
VM Host  A VM host is a physical computer running a VMware hypervisor A VCL computer entry must be added for each VM host ({color:#000000}{}Manage Computers &amp;gt; Edit Computer Information){color} {color:#000000}After the computer has been added to VCL, it is designated as a VM host by changing the computer state to vmhostinuse{color} {color:#000000}(Manage Computers &amp;gt; Computer Utilities){color}  
VM  A VM is a virtual machine managed by VCL A computer entry must be added to VCL for each VM ({color:#000000}{}Manage Computers &amp;gt; Edit Computer Information){color} {color:#000000}Each VM must be assigned to a VM host{color} {color:#000000}(Virtual Hosts &amp;gt; VM Hosts tab &amp;gt; Configure Host){color} VMs do not need to be created manually in VMware, VCL automatically creates and deletes VMs</description>
    </item>
    
    <item>
      <title>VMware Provisioning Module Information</title>
      <link>https://vcl.apache.org/confluence_export/vmware-provisioning-module-information.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/vmware-provisioning-module-information.html</guid>
      <description>VMware Provisioning Module  Source file: managementnode/lib/VCL/Module/Provisioning/VMware/VMware.pm  
Supported VMware Products  VMware Server 2.0 VMware ESX/ESXi 3.5 VMware ESX/ESXi 4.0  
Supported VMware APIs, SDKs, &amp;amp; CLIs There are several different methods to control VMware hosts and virtual machines. The main VMware.pm module should remain as SDK/API/CLI-agnostic as possible. All code which interacts with a VMware remote control method should reside in utility modules located in the lib/VCL/Module/Provisioning/VMware directory.</description>
    </item>
    
    <item>
      <title>Web Code Installation</title>
      <link>https://vcl.apache.org/confluence_export/web-code-installation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vcl.apache.org/confluence_export/web-code-installation.html</guid>
      <description>{excerpt}This page describes how to install and configure the frontend VCL web code components including the web server prerequisites and frontend VCL web code. It also describes how to add local web accounts, configure LDAP authentication, and set the timezone correctly.{excerpt}

Prerequisites Your web server should meet the following criteria before installing the frontend VCL code:
 Apache HTTP Server v1.3 or v2.x with SSL enabled - while VCL may run under another webserver capable of running PHP code, it has only been tested to work with Apache HTTP Server PHP 5 php modules that should be installed (depending on your Linux distro, some of these may be compiled in to php instead of being a separate module): ** php-gd ** php-json (if your PHP version is &amp;lt; 5.</description>
    </item>
    
  </channel>
</rss>